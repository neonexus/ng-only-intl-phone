"use strict";!function(a){"function"==typeof define&&define.amd?define("digits-trie",function(){return a()}):"object"==typeof module&&module.exports?module.exports=a():window.DigitsTrie=a()}(function(){function a(a){if("string"!=typeof a)return!1;for(var b=0;b<a.length;b++)if(isNaN(parseInt(a[b])))return!1;return!0}function b(b){if(!a(b))throw new Error('digits-trie: invalid key "'+b+'" -_-')}function c(a){return 0===a.length}function d(a){return!(a&&a.key&&a.value)}function e(){this.children=new Array(9)}function f(){this.root=new e}var g=new e;return g.isNil=!0,g.value="",g.key="",e.prototype.getChild=function(a){if(0>a||a>9)throw new Error("-_-");return this.children[a]?this.children[a]:this.children[a]=new e},f.prototype.set=function(a,d){if(b(a),!c(a)){for(var e=this.root,f=0;f<a.length-1;f++){var g=a[f],h=parseInt(g);e=e.getChild(h)}var i=e.getChild(parseInt(a[a.length-1]));i.value=d,i.key=a}},f.prototype.get=function(a){if(b(a),c(a))return g;for(var e=this.root,f=0;e&&f<a.length;f++){var h=a[f],i=parseInt(h);e=e.children[i]}return d(e)?g:e},f.prototype.longestMatchingPrefix=function(a){if(b(a),c(a))return g;for(var e=null,f=this.root,h=0;f&&h<a.length;h++){var i=a[h],j=parseInt(i);f.value&&(e=f),f=f.children[j]}return d(f)?d(e)?g:e:f},f});